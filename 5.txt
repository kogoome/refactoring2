05 CHAPTER
리팩터링 카탈로그 보는 법

이제부터는 여러 가지 리팩터링 기법을 하나씩 소개한다. 나는 안전하고 효율적으로 리팩터링하는 방법이 잘 기억나지 않을 때 언제든 다시 찾아볼 수 있도록 노트에 정리해뒀다. 이제부터이어질 카탈로그(6~12장)는 이 노트의 내용을 다듬고 몇 가지 리팩터링은 더 깊이 탐구해보면서 분량이 늘었다. 나는 써본 지 좀 된 리팩터링 기법을 적용할 때 여전히 이 카탈로그를 활용한다.

5.1 리팩터링 설명 형식

카탈로그의 리팩터링 기법들은 일정한 형식을 갖춰 정리했다. 각 기법에 대한 설명은 다음의다섯 항목으로 구성된다.

가장 먼저 이름이 나온다. 이름은 리팩터링 용어를 구축하는 데 중요하다. 책 전반에서 해당 리팩터링을 이 이름으로 지칭한다. 같은 기법을 다르게 부르는 경우도 있기 때문에 그중 흔한 이름도 함께 소개한다.

다음으로 리팩터링의 핵심 개념을 간략히 표현한 개요(개념도 + 코드 예시)가 나온다. 원하는 리팩터링을 찾을 때 도움될 것이다.

• 그다음에 나오는 배경은 해당 리팩터링 기법이 왜 필요한지와 그 기법을 적용하면 안 되는 상황을 설명한다.

• 이어서 나오는 절차는 리팩터링하는 과정을 단계별로 제시한다.마지막의 예시는 해당 리팩터링 기법을 실제로 적용하는 간단한 예와 그 효과를 보여준다.

page(153)

개요에서는 리팩터링 전후로 코드가 어떻게 달라지는지 보여준다. 개요는 리팩터링의 개념이나수행 과정을 설명하기 위해서가 아니라 나중에 다시 찾아볼 때 이 기법이 어떤 것인지 쉽게 떠올리기 위한 것이다. 개요만 보고는 잘 떠오르지 않는다면 예시까지 살펴봐야 할 것이다. 함께나오는 간단한 그림도 마찬가지로 설명을 위해서가 아니라 기억 되살리기용 시각 장치다.

절차는 오랜만에 적용하는 리팩터링의 구체적인 단계를 잊지 않도록 개인 노트에 기록해둔 것이다. 그래서 압축된 표현이 많고, 단계를 왜 그렇게 구성했는지에 대한 설명이 없을 때도 많다. 제대로 된 설명은 '예시' 에서 풀어준다. 그러니 해당 리팩터링을 알고 있지만 구체적인 진행순서가 기억나지 않을 때 참고하기 좋은 짤막한 노트 정도로 생각하자 (최소한 나는 이렇게 활용한다), 해당 리팩터링을 처음 볼 때는 '예시'를 꼼꼼히 읽기 바란다.

절차에는 해당 리팩터링의 단계를 가능한 한 잘게 나눠놓았다. 다시 강조하지만, 리팩터링을안전하게 수행하려면 단계를 최대한 잘게 나누고 각 단계마다 테스트해야 한다. 실전에서는 각단계를 더 크게 잡고 리팩터링할 때가 많은데, 그러다 버그가 생기면 이전 단계로 돌아가서 크기를 줄여 다시 진행한다. 어떤 단계에는 '→'로 시작하는 세부 항목이 딸려 있는데, 세부 단계가 아니라 특수한 경우를 위한 참고사항이다. 이 항목들은 해당 단계에서 일종의 체크리스트처럼 활용할 수 있다. 나도 여기 적어둔 사항들이 기억나지 않을 때가 많다.

(항상 그런 것은 아니지만) 절차에서는 한 가지 방식만 소개하는데, 해당 리팩터링을 수행하는 유일한 방법이라는 뜻은 아니다. 그저 대부분 상황에 잘 들어맞는 절차를 선정했을 뿐이다.리팩터링 경험이 쌓일수록 구체적인 절차를 변형하게 될 텐데, 그래도 문제없다. 작은 단계를밟아 나가는 게 핵심이라는 점만 명심하기 바란다. 상황이 난해할수록 단계를 잘게 나누자.

예시는 어처구니없을 정도로 간단한 사례로 구성했다. 주의를 분산시키지 않고 리팩터링의 기본에 집중하여 설명하기 위해서다. 그러니 너무 단순하더라도 이해해주기 바란다. (당연히 실제 업무에 적용하기에도 바람직한 코드는 아니다.) 하지만 여러분 앞에 놓인 더 복잡한 상황에응용하는 데는 부족하지 않을 것이다. 너무 간단한 리팩터링은 예시를 생략했다. 예시를 보여준다고해서 나아질 게 없다고 판단했기 때문이다.

예시는 어디까지나 해당 절에서 소개하는 리팩터링 기법 하나만 보여주기 위한 것이다. 그래서수정을 마친 코드에는 다른 문제가 얼마든지 남아 있을 수 있다(그리고 이를 해결하려면 다른리팩터링을 적용해야 한다). 간혹 실무에서 하나의 패턴처럼 연달아 적용되는 리팩터링들이있는데, 이런 경우에는 예시에서도 연달아 적용했다. 그 외 대부분의 경우는 한 가지 리팩터링만 적용한 상태로 뒀다. 리팩터링 카탈로그의 주 용도는 어디까지나 레퍼런스이기 때문에 각각의 리팩터링을 최대한 독립적으로 구성하기 위해서다.

page(154)

코드에서 변경된 부분을 구분하기 어려울 때는 다른 글꼴로 강조했다. 그렇다고 변경된 코드 전부를 강조하지는 않았다. 과유불급! 너무 과하면 오히려 역효과가 날 수 있기 때문이다.

5.2 리팩터링 기법 선정 기준

이 카탈로그는 물론 완벽하지 않다. 내 생각에 가장 유용한 것들만 담았다. 여기서 가장 유용하다' 함은 흔히 사용되고 특별히 이름과 설명을 덧붙일 만한 가치가 있다는 뜻이다. 설명할 가치가 있다고 판단한 기준은 복합적이다. 어떤 것은 그 절차가 일반적인 리팩터링 기법을 익히는 데 도움되기 때문이고, 어떤 것은 코드 설계 개선에 크게 기여하기 때문이다.

따로 기록해둘 필요가 없을 정도로 간단하고 직관적인 리팩터링 기법은 생략했다. 가령 문장 슬라이드하기 6는 초판에서 소개하지 않았다. 개인적으로 자주 사용하지만 카탈로 그에 넣을 만하다고 생각하진 않았다(하지만 마음을 바꿔서 이번에는 추가했다). 앞으로도 내가 새로운 리팩터링 개발에 계속 힘쓴다면 이런 식으로 다음 판에 추가되는 리팩터링이 얼마든지 있을 수 있다.

또한 논리적으로는 분명 존재하지만 내가 잘 사용하지 않거나 비슷한 리팩터링이 있는 것도 생략했다. 이 책에 나온 모든 리팩터링에는 논리적으로 정반대에 해당하는 기법들이 존재한다. 하지만 그 반대 기법 중 특별히 관심 가지 않는 것은 생략했다. 예컨대 변수 캡슐화하기는 자주 사용하고 강력한 기법이지만, 그 반대 기법은 내가 사용할 일이 거의 없었어서 (게다가 적용방법도 간단해서) 카탈로그에 넣지 않았다.

page(155)
